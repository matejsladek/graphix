language: node_js

node_js:
  - "6"
  - "8"

env:
  global:
  - secure: uMasrRWafTkDRgjySbE3YehEq+ryQH8xkCdT07v6W5hTIFZSKafzYSZ2bhRfeXO6JqlBBw0ZK6BQ5gm3tu/eR8tuY9IR2wPLKbS3gOGVXeyLxdNhFkq6oVvfD1zXXoW+B6a0A1nJvbXKcv5mWxKvLfXt3QsaXyqwAaxWroU12S7T947hl5c94fkKYM1PdIVhiTesVMK5Sh3XTNVHuRrs/jI2HayxDkWiSEZ0k8gW76J8vlIZq/9axoGXw+omw4EHZaKx/Nak6fqqZO2Fqq0nKTXa3Jni0UnCdpO6Jv24qQrZsq7Oh4XzUKnx0VGoGzB31VcNnZMGGP+EhhiHrGTSgExSISue+S39NHMdCzhjWxoKjYqtQbcsVYyX4ArduPwo05bbQVLvTSWQ6S8qdFwVHrXaNksS5PRnnugeN45Q0H7M/hXqXuC3HLQISv8mYHQ/VAK0kgl4jFxtPh5vGAfd7CiJLZG9lTYJw7UdUSMxA3Lh3Q1EwcpuFEp6k0GBQzsbOvQn830VCqBQ31431jeMZHHmEGvdMEZoYUMr12xWpge3LrdHH5bzwgGxrPeNVUaFFLg50jkXTIn8s6LcrN/Mr1pHWUjtOcjtju+Ac2cBndLfVr/CSetL88OB19P7qZgoVVY8IrTjr8oLBQFN+tzHi1d2zLOL/dk2fauLlgk9iL4=
  - secure: W3qxUIQ/PpbL7MKogntX+1fXR9q89pt7jiZg52/2bDUzuK5AIKNNIIe+86AguDJhRC/0NFHd9D32MUL56Hq3VjgUzCUYBZeNCZhFyJMacll6D3mha9Eqx1l0njyjiltGpPrYtCLrFDgiHfMeMeWeADgxU9t9U1y9/oyRQ9sSP9ni8cWNY4LsA5A7UjcyxP6rapj9/2snjUvCFiXw/cMdQ30yhym1r4c4EzWKyDUTKOIIz0DxpwhZMMcnDKhwuHRtihwnbEqK32fa9pgSYBM0R2SbZ+CUy41ws2bEkwSW+kmuYJXIhYaWxs7qnYW0/s3Ieg2peu6KmjtzYFx9a6FGtQdKOC9xo9r/Skwx0pw5htMwqsphUwiSRF0X1t9T4dLIKB+Im8yml6AQsnwI7MfI1zhBDI/SqTx23BJKgoeM10J19CHhP6Q7iGD9vmgTRtnNcLUvgcZR8mNYgHC9Aq6UZERXmIN85ailrGyqPBDfCVgkIGb/FsS1eDSWPr9Dh/MZ5OIe69DrF/2ksClz7Xw1ow62pdjr6o91bhH5nN1Ycyu98GhjHgOT3WCAYTsFDV0LONxx4SjjcuB+G5WxLV3AvZQ+MbaoUf7MkrdgNcA7z6AoAziliRB/aZ7T5c5juIRA01yAJGhGfyoSwx0h72lecI0bUyJm+wedR4ofjFAVWH4=

before_install:
# get commit message
- COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')
# put local node-pre-gyp on PATH
- export PATH=./node_modules/.bin/:$PATH
# put global node-gyp on PATH
- npm install node-gyp -g
# install aws-sdk so it is available for publishing
- npm install aws-sdk
# figure out if we should publish
- PUBLISH_BINARY=true
# if we are building a tag then publish
- if [[ $TRAVIS_BRANCH == `git describe --tags --always HEAD` ]]; then PUBLISH_BINARY=true; fi;
# or if we put [publish binary] in the commit message
- if test "${COMMIT_MESSAGE#*'[publish binary]'}" != "$COMMIT_MESSAGE"; then PUBLISH_BINARY=true; fi;

install:
# ensure source install works
- npm install --build-from-source
# test our module
- npm run test

before_script:
# if publishing, do it
- if [[ $PUBLISH_BINARY == true ]]; then node-pre-gyp package publish; fi;
# cleanup
- node-pre-gyp clean
- node-gyp clean

script:
# if publishing, test installing from remote
- INSTALL_RESULT=0
- if [[ $PUBLISH_BINARY == true ]]; then INSTALL_RESULT=$(npm install --fallback-to-build=false > /dev/null)$? || true; fi;
# if install returned non zero (errored) then we first unpublish and then call false so travis will bail at this line
- if [[ $INSTALL_RESULT != 0 ]]; then echo "returned $INSTALL_RESULT";node-pre-gyp unpublish;false; fi
# If success then we arrive here so lets clean up
- node-pre-gyp clean

after_success:
# if success then query and display all published binaries
- node-pre-gyp info